{"version":3,"sources":["fBase.js","component/Header.js","component/NewMukkit.js","component/MukkitItem.js","component/MukkitContainer.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","dbService","firestore","Header","className","NewMukkit","newMukkit","onChangeNewMukkit","onClickAddBtn","justify","span","placeholder","value","placeName","onChange","e","location","type","size","onClick","MukkitItem","index","mukkit","modifyingMukkit","onChangeMukkit","onClickFaceIcon","onClickEditBtn","onClickDeleteBtn","onClickDoneBtn","onClickCancelBtn","align","shape","isVisited","icon","SmileOutlined","FrownOutlined","disabled","onEdit","CheckOutlined","CloseOutlined","EditOutlined","DeleteOutlined","id","MukkitContainer","useState","mukkitList","setMukkitList","setNewMukkit","setModifyingMukkit","a","window","alert","collection","add","sn","length","currentValue","undefined","doc","update","field","target","tempArray","confirm","delete","useEffect","orderBy","onSnapshot","snapShot","list","docs","map","row","data","Content","dataSource","renderItem","item","Item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee93e4d2.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\n\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();","import React from 'react';\n\nconst Header = () => (\n  <div className=\"header\">Mukkit List</div>\n);\n\nexport default Header;","import React from 'react';\nimport { Row, Col, Input, Button } from 'antd';\n\nconst NewMukkit = ({\n  newMukkit,\n  onChangeNewMukkit,\n  onClickAddBtn,\n}) => (\n  <div className=\"new-mukkit\">\n    <Row justify=\"center\">\n      <Col span={24}>\n        <Input\n          className=\"new-input\"\n          placeholder=\"다음에 갈 곳은\"\n          value={newMukkit.placeName}\n          onChange={e => onChangeNewMukkit('placeName', e)}\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col span={24}>\n        <Input\n          className=\"new-input\"\n          placeholder=\"어디인가요\"\n          value={newMukkit.location}\n          onChange={e => onChangeNewMukkit('location', e)}\n        />\n      </Col>\n    </Row>\n    <Row>\n      <Col span={24}>\n        <Button type=\"primary\" size=\"large\" onClick={onClickAddBtn}>Go!!!!!</Button>\n      </Col>\n    </Row>\n  </div>\n);\n\nexport default NewMukkit;","import React from 'react';\nimport { Row, Col, Button, Input } from 'antd';\nimport {\n  FrownOutlined,\n  SmileOutlined,\n  DeleteOutlined,\n  EditOutlined,\n  CheckOutlined,\n  CloseOutlined,\n} from '@ant-design/icons';\n\nconst MukkitItem = ({\n  index,\n  mukkit,\n  modifyingMukkit,\n  onChangeMukkit,\n  onClickFaceIcon,\n  onClickEditBtn,\n  onClickDeleteBtn,\n  onClickDoneBtn,\n  onClickCancelBtn,\n}) => (\n  <div className=\"mukkit-item\">\n    <Row justify=\"space-around\" align=\"middle\">\n      <Col span={1}>\n        <Button\n          shape=\"circle\"\n          type={mukkit.isVisited ? 'primary' : 'default'}\n          icon={mukkit.isVisited ? (<SmileOutlined />) : (<FrownOutlined />)}\n          onClick={() => onClickFaceIcon(mukkit)}\n        />\n      </Col>\n      <Col span={15}>\n        <Row>\n          <Col span={15}>\n            <Input\n              className=\"mukkit-item-input\"\n              disabled={!mukkit.onEdit}\n              value={mukkit.onEdit ? modifyingMukkit.placeName : mukkit.placeName}\n              onChange={e => onChangeMukkit('placeName', e)}\n            />\n          </Col>\n        </Row>\n        <Row>\n          <Col span={15}>\n            <Input\n              className=\"mukkit-item-input\"\n              disabled={!mukkit.onEdit}\n              value={mukkit.onEdit ? modifyingMukkit.location : mukkit.location}\n              onChange={e => onChangeMukkit('location', e)}\n            />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={2}>\n        <div className=\"btn-group\">\n          {mukkit.onEdit ? (\n            <>\n              <Button shape=\"circle\" icon={<CheckOutlined />} onClick={() => onClickDoneBtn(index)} />\n              <Button shape=\"circle\" icon={<CloseOutlined />} onClick={() => onClickCancelBtn(index)} />\n            </>\n          ) : (\n            <>\n              <Button shape=\"circle\" icon={<EditOutlined />} onClick={() => onClickEditBtn(index)} />\n              <Button shape=\"circle\" icon={<DeleteOutlined />} onClick={() => onClickDeleteBtn(mukkit.id)} />\n            </>\n          )}\n          \n        </div>\n      </Col>\n    </Row>\n  </div>\n);\n\nexport default MukkitItem;","import React, { useEffect, useState } from 'react';\nimport { dbService } from 'fBase';\nimport Header from './Header';\nimport NewMukkit from './NewMukkit';\nimport MukkitItem from './MukkitItem';\nimport { Layout, List } from 'antd';\n\nconst MukkitContainer = () => {\n\n  const [mukkitList, setMukkitList] = useState([]);\n  const [newMukkit, setNewMukkit] = useState({ placeName: \"\", location: \"\" });\n  const [modifyingMukkit, setModifyingMukkit] = useState({ placeName: \"\", location: \"\" });\n\n  // 새 먹킷 리스트 추가 입력란 변경 이벤트 핸들러\n  const onChangeNewMukkit = (field, e) => {\n    setNewMukkit({ ...newMukkit, [field]: e.target.value });\n  };\n\n  // 새 먹킷 리스트 추가 이벤트 핸들러\n  const onClickAddBtn = async () => {\n    if ( newMukkit.placeName === '' ) {\n      window.alert('적어도 식당 이름은 넣어주셔야쥬');\n    } else {\n      await dbService.collection('mukkit').add({\n          sn: mukkitList.length + 1,\n          ...newMukkit,\n      });\n      setNewMukkit({ placeName: \"\", location: \"\" });\n    }\n  };\n\n  // 기존 먹킷 리스트 방문 여부 등록 이벤트 핸들러\n  const onClickFaceIcon = mukkit => {\n    const currentValue = mukkit.isVisited;\n\n    if (currentValue !== undefined && currentValue !== null) {\n      dbService.doc(`mukkit/${mukkit.id}`).update({\n        isVisited: !currentValue\n      }); \n    } else {\n      dbService.doc(`mukkit/${mukkit.id}`).update({\n        isVisited: true,\n      }); \n    }\n  };\n\n  // 기존 먹킷 리스트 장소명or위치 변경 이벤트 핸들러\n  const onChangeMukkit = (field, e) => {\n    setModifyingMukkit({ ...modifyingMukkit, [field]: e.target.value });\n  };\n\n  // 기존 먹킷 리스트 수정 이벤트 핸들러\n  const onClickEditBtn = index => {\n    const tempArray = [...mukkitList];\n    const target = tempArray[index];\n\n    target[\"onEdit\"] = true;\n\n    setModifyingMukkit({ placeName: target.placeName, location: target.location });\n    setMukkitList(tempArray);\n  };\n\n  // 기존 먹킷 리스트 삭제 이벤트 핸들러\n  const onClickDeleteBtn = (id) => {\n    if ( window.confirm('정말 지우시나요?')) {\n      dbService.doc(`mukkit/${id}`).delete();\n    }\n  };\n\n  // 기존 먹킷 리스트 장소명or위치 수정 종료 이벤트 핸들러\n  const onClickDoneBtn = async index => {\n    const tempArray = [...mukkitList];\n    const target = tempArray[index];\n\n    target[\"onEdit\"] = false;\n    setMukkitList(tempArray);\n\n    dbService.doc(`mukkit/${target.id}`).update({ placeName: modifyingMukkit.placeName, location: modifyingMukkit.location });\n  };\n\n  // 기존 먹킷 리스트 수정 취소 이벤트 핸들러\n  const onClickCancelBtn = index => {\n    const tempArray = [...mukkitList];\n    tempArray[index][\"onEdit\"] = false;\n\n    setMukkitList(tempArray);\n  };\n\n  useEffect(() => {\n    dbService.collection('mukkit').orderBy('sn').onSnapshot(snapShot => {\n      const list = snapShot.docs.map(row => ({ id: row.id, onEdit: false, ...row.data() }));\n      setMukkitList(list);\n    });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <Header />\n      <Layout.Content>\n        <NewMukkit\n          newMukkit={newMukkit}\n          onChangeNewMukkit={onChangeNewMukkit}\n          onClickAddBtn={onClickAddBtn}\n        />\n        <div>\n          <List\n            size=\"large\"\n            // bordered\n            dataSource={mukkitList}\n            renderItem={(item, index) =>\n              <List.Item>\n                <MukkitItem\n                  key={item.sn}\n                  index={index}\n                  mukkit={item}\n                  modifyingMukkit={modifyingMukkit}\n                  onChangeMukkit={onChangeMukkit}\n                  onClickFaceIcon={onClickFaceIcon}\n                  onClickEditBtn={onClickEditBtn}\n                  onClickDeleteBtn={onClickDeleteBtn}\n                  onClickDoneBtn={onClickDoneBtn}\n                  onClickCancelBtn={onClickCancelBtn}\n                />\n              </List.Item>\n            }\n          />\n        </div>\n      </Layout.Content>\n    </div>\n  )\n};\n\nexport default MukkitContainer;","import React from 'react';\nimport MukkitContainer from './component/MukkitContainer';\nimport './App.css';\n\nfunction App() {\n  return <MukkitContainer />\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}